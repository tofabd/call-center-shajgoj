#!/bin/bash

# Test MongoDB API Integration
# This script tests the connection and endpoints of the MongoDB API

API_BASE_URL=\"http://localhost:3000/api\"\nFRONTEND_URL=\"http://localhost:5173\"\n\necho \"üîß Testing MongoDB API Integration\"\necho \"======================================\"\necho \"API Base URL: $API_BASE_URL\"\necho \"Frontend URL: $FRONTEND_URL\"\necho \"\"\n\n# Test 1: API Health Check\necho \"üì° Test 1: API Health Check\"\necho \"GET $API_BASE_URL/\"\nif curl -s -f \"$API_BASE_URL/\" > /dev/null 2>&1; then\n    echo \"‚úÖ API is responding\"\nelse\n    echo \"‚ùå API is not responding\"\n    echo \"   Make sure the API server is running: npm run dev (in api folder)\"\nfi\necho \"\"\n\n# Test 2: Live Calls Endpoint\necho \"üìû Test 2: Live Calls Endpoint\"\necho \"GET $API_BASE_URL/calls/live\"\nRESPONSE=$(curl -s -w \"\\n%{http_code}\" \"$API_BASE_URL/calls/live\" 2>/dev/null)\nHTTP_CODE=$(echo \"$RESPONSE\" | tail -n1)\nRESPONSE_BODY=$(echo \"$RESPONSE\" | head -n -1)\n\nif [ \"$HTTP_CODE\" = \"200\" ]; then\n    echo \"‚úÖ Live calls endpoint working\"\n    CALL_COUNT=$(echo \"$RESPONSE_BODY\" | grep -o '\"data\":\\[.*\\]' | grep -o '{' | wc -l)\n    echo \"   Found $CALL_COUNT live calls\"\n    if [ \"$CALL_COUNT\" -gt 0 ]; then\n        echo \"   Sample response:\"\n        echo \"$RESPONSE_BODY\" | head -c 200\n        echo \"...\"\n    fi\nelse\n    echo \"‚ùå Live calls endpoint failed (HTTP $HTTP_CODE)\"\n    echo \"   Response: $RESPONSE_BODY\"\nfi\necho \"\"\n\n# Test 3: Call Statistics Endpoint\necho \"üìä Test 3: Call Statistics Endpoint\"\necho \"GET $API_BASE_URL/calls/statistics\"\nRESPONSE=$(curl -s -w \"\\n%{http_code}\" \"$API_BASE_URL/calls/statistics\" 2>/dev/null)\nHTTP_CODE=$(echo \"$RESPONSE\" | tail -n1)\nRESPONSE_BODY=$(echo \"$RESPONSE\" | head -n -1)\n\nif [ \"$HTTP_CODE\" = \"200\" ]; then\n    echo \"‚úÖ Statistics endpoint working\"\n    echo \"   Sample response:\"\n    echo \"$RESPONSE_BODY\" | head -c 200\n    echo \"...\"\nelse\n    echo \"‚ùå Statistics endpoint failed (HTTP $HTTP_CODE)\"\n    echo \"   Response: $RESPONSE_BODY\"\nfi\necho \"\"\n\n# Test 4: Paginated Calls Endpoint\necho \"üìã Test 4: Paginated Calls Endpoint\"\necho \"GET $API_BASE_URL/calls?page=1&limit=5\"\nRESPONSE=$(curl -s -w \"\\n%{http_code}\" \"$API_BASE_URL/calls?page=1&limit=5\" 2>/dev/null)\nHTTP_CODE=$(echo \"$RESPONSE\" | tail -n1)\nRESPONSE_BODY=$(echo \"$RESPONSE\" | head -n -1)\n\nif [ \"$HTTP_CODE\" = \"200\" ]; then\n    echo \"‚úÖ Paginated calls endpoint working\"\n    TOTAL_CALLS=$(echo \"$RESPONSE_BODY\" | grep -o '\"totalCalls\":[0-9]*' | grep -o '[0-9]*')\n    if [ ! -z \"$TOTAL_CALLS\" ]; then\n        echo \"   Total calls in database: $TOTAL_CALLS\"\n    fi\nelse\n    echo \"‚ùå Paginated calls endpoint failed (HTTP $HTTP_CODE)\"\n    echo \"   Response: $RESPONSE_BODY\"\nfi\necho \"\"\n\n# Test 5: CORS Configuration\necho \"üåê Test 5: CORS Configuration\"\necho \"OPTIONS $API_BASE_URL/calls/live (from frontend origin)\"\nCORS_RESPONSE=$(curl -s -I -X OPTIONS \\\n    -H \"Origin: $FRONTEND_URL\" \\\n    -H \"Access-Control-Request-Method: GET\" \\\n    -H \"Access-Control-Request-Headers: Content-Type\" \\\n    \"$API_BASE_URL/calls/live\" 2>/dev/null)\n\nif echo \"$CORS_RESPONSE\" | grep -q \"Access-Control-Allow-Origin\"; then\n    echo \"‚úÖ CORS is properly configured\"\n    ALLOWED_ORIGIN=$(echo \"$CORS_RESPONSE\" | grep \"Access-Control-Allow-Origin\" | cut -d':' -f2- | tr -d '\\r\\n ')\n    echo \"   Allowed origin: $ALLOWED_ORIGIN\"\nelse\n    echo \"‚ùå CORS may not be properly configured\"\n    echo \"   This could cause frontend connection issues\"\nfi\necho \"\"\n\n# Test 6: Database Connection (via API)\necho \"üóÑÔ∏è Test 6: Database Connection Test\"\necho \"Testing if API can connect to MongoDB...\"\nRESPONSE=$(curl -s -w \"\\n%{http_code}\" \"$API_BASE_URL/calls?limit=1\" 2>/dev/null)\nHTTP_CODE=$(echo \"$RESPONSE\" | tail -n1)\n\nif [ \"$HTTP_CODE\" = \"200\" ]; then\n    echo \"‚úÖ Database connection working\"\nelse\n    echo \"‚ùå Database connection issues (HTTP $HTTP_CODE)\"\n    echo \"   Check MongoDB connection and API logs\"\nfi\necho \"\"\n\necho \"üéØ Summary:\"\necho \"==========\"\necho \"1. Start the API server: cd api && npm run dev\"\necho \"2. Start the frontend: cd frontend && npm run dev\"\necho \"3. Open LiveCalls component in the frontend\"\necho \"4. The component should automatically poll for real-time data\"\necho \"\"\necho \"üìö Key Integration Points:\"\necho \"- API Base URL: $API_BASE_URL\"\necho \"- Live Calls Endpoint: $API_BASE_URL/calls/live\"\necho \"- Polling Interval: 2 seconds (configurable)\"\necho \"- CORS Origins: Multiple ports supported (5173, 5073, 5074, 5075)\"\necho \"\"\necho \"üîß If you see any ‚ùå errors above:\"\necho \"1. Ensure the API server is running on port 3000\"\necho \"2. Check MongoDB connection in API logs\"\necho \"3. Verify CORS configuration in .env file\"\necho \"4. Check network connectivity between frontend and API\"